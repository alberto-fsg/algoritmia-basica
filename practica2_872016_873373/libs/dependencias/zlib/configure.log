--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 17:57:37 CET 2025
Checking for gcc...
=== ztest4111679.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4111679.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4111679.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4111679.c

Checking for shared library support...
=== ztest4111679.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4111679.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4111679.so ztest4111679.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest4111679.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4111679.c
Checking for size_t... Yes.

=== ztest4111679.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4111679.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4111679.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4111679 ztest4111679.c
Checking for strerror... Yes.

=== ztest4111679.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4111679.c
Checking for unistd.h... Yes.

=== ztest4111679.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4111679.c
Checking for stdarg.h... Yes.

=== ztest4111679.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4111679.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4111679.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4111679 ztest4111679.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4111679.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4111679.c
Checking for return value of vsnprintf()... Yes.

=== ztest4111679.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4111679.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 18:01:48 CET 2025
Checking for gcc...
=== ztest4116910.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4116910.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4116910.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4116910.c

Checking for shared library support...
=== ztest4116910.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4116910.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4116910.so ztest4116910.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest4116910.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4116910.c
Checking for size_t... Yes.

=== ztest4116910.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4116910.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4116910.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4116910 ztest4116910.c
Checking for strerror... Yes.

=== ztest4116910.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4116910.c
Checking for unistd.h... Yes.

=== ztest4116910.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4116910.c
Checking for stdarg.h... Yes.

=== ztest4116910.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4116910.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4116910.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4116910 ztest4116910.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4116910.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4116910.c
Checking for return value of vsnprintf()... Yes.

=== ztest4116910.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4116910.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 18:06:31 CET 2025
Checking for gcc...
=== ztest4123003.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4123003.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4123003.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4123003.c

Checking for shared library support...
=== ztest4123003.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4123003.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4123003.so ztest4123003.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest4123003.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4123003.c
Checking for size_t... Yes.

=== ztest4123003.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4123003.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4123003.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4123003 ztest4123003.c
Checking for strerror... Yes.

=== ztest4123003.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4123003.c
Checking for unistd.h... Yes.

=== ztest4123003.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4123003.c
Checking for stdarg.h... Yes.

=== ztest4123003.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4123003.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4123003.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4123003 ztest4123003.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4123003.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4123003.c
Checking for return value of vsnprintf()... Yes.

=== ztest4123003.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4123003.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 18:11:51 CET 2025
Checking for gcc...
=== ztest4130436.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4130436.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4130436.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4130436.c

Checking for shared library support...
=== ztest4130436.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4130436.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4130436.so ztest4130436.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest4130436.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4130436.c
Checking for size_t... Yes.

=== ztest4130436.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4130436.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4130436.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4130436 ztest4130436.c
Checking for strerror... Yes.

=== ztest4130436.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4130436.c
Checking for unistd.h... Yes.

=== ztest4130436.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4130436.c
Checking for stdarg.h... Yes.

=== ztest4130436.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4130436.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4130436.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4130436 ztest4130436.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4130436.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4130436.c
Checking for return value of vsnprintf()... Yes.

=== ztest4130436.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4130436.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 18:18:17 CET 2025
Checking for gcc...
=== ztest4143152.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4143152.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4143152.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4143152.c

Checking for shared library support...
=== ztest4143152.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4143152.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4143152.so ztest4143152.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest4143152.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4143152.c
Checking for size_t... Yes.

=== ztest4143152.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4143152.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4143152.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4143152 ztest4143152.c
Checking for strerror... Yes.

=== ztest4143152.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4143152.c
Checking for unistd.h... Yes.

=== ztest4143152.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4143152.c
Checking for stdarg.h... Yes.

=== ztest4143152.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4143152.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4143152.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4143152 ztest4143152.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4143152.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4143152.c
Checking for return value of vsnprintf()... Yes.

=== ztest4143152.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4143152.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 18:21:48 CET 2025
Checking for gcc...
=== ztest4150310.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4150310.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4150310.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4150310.c

Checking for shared library support...
=== ztest4150310.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4150310.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4150310.so ztest4150310.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest4150310.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4150310.c
Checking for size_t... Yes.

=== ztest4150310.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4150310.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4150310.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4150310 ztest4150310.c
Checking for strerror... Yes.

=== ztest4150310.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4150310.c
Checking for unistd.h... Yes.

=== ztest4150310.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4150310.c
Checking for stdarg.h... Yes.

=== ztest4150310.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4150310.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4150310.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4150310 ztest4150310.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4150310.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4150310.c
Checking for return value of vsnprintf()... Yes.

=== ztest4150310.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4150310.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 18:30:29 CET 2025
Checking for gcc...
=== ztest4164727.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest4164727.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest4164727.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest4164727.c

Checking for shared library support...
=== ztest4164727.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest4164727.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest4164727.so ztest4164727.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest4164727.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest4164727.c
Checking for size_t... Yes.

=== ztest4164727.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4164727.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest4164727.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4164727 ztest4164727.c
Checking for strerror... Yes.

=== ztest4164727.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4164727.c
Checking for unistd.h... Yes.

=== ztest4164727.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4164727.c
Checking for stdarg.h... Yes.

=== ztest4164727.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4164727.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest4164727.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest4164727 ztest4164727.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest4164727.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4164727.c
Checking for return value of vsnprintf()... Yes.

=== ztest4164727.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest4164727.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 20:46:21 CET 2025
Checking for gcc...
=== ztest82851.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest82851.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest82851.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest82851.c

Checking for shared library support...
=== ztest82851.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest82851.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest82851.so ztest82851.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest82851.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest82851.c
Checking for size_t... Yes.

=== ztest82851.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest82851.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest82851.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest82851 ztest82851.c
Checking for strerror... Yes.

=== ztest82851.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest82851.c
Checking for unistd.h... Yes.

=== ztest82851.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest82851.c
Checking for stdarg.h... Yes.

=== ztest82851.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest82851.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest82851.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest82851 ztest82851.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest82851.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest82851.c
Checking for return value of vsnprintf()... Yes.

=== ztest82851.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest82851.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 21:01:20 CET 2025
Checking for gcc...
=== ztest96461.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest96461.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest96461.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest96461.c

Checking for shared library support...
=== ztest96461.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest96461.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest96461.so ztest96461.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest96461.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest96461.c
Checking for size_t... Yes.

=== ztest96461.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest96461.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest96461.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest96461 ztest96461.c
Checking for strerror... Yes.

=== ztest96461.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest96461.c
Checking for unistd.h... Yes.

=== ztest96461.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest96461.c
Checking for stdarg.h... Yes.

=== ztest96461.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest96461.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest96461.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest96461 ztest96461.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest96461.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest96461.c
Checking for return value of vsnprintf()... Yes.

=== ztest96461.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest96461.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 21:06:33 CET 2025
Checking for gcc...
=== ztest103223.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest103223.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest103223.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest103223.c

Checking for shared library support...
=== ztest103223.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest103223.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest103223.so ztest103223.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest103223.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest103223.c
Checking for size_t... Yes.

=== ztest103223.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest103223.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest103223.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest103223 ztest103223.c
Checking for strerror... Yes.

=== ztest103223.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest103223.c
Checking for unistd.h... Yes.

=== ztest103223.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest103223.c
Checking for stdarg.h... Yes.

=== ztest103223.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest103223.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest103223.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest103223 ztest103223.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest103223.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest103223.c
Checking for return value of vsnprintf()... Yes.

=== ztest103223.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest103223.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 22:01:35 CET 2025
Checking for gcc...
=== ztest138230.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest138230.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest138230.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest138230.c

Checking for shared library support...
=== ztest138230.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest138230.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest138230.so ztest138230.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest138230.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest138230.c
Checking for size_t... Yes.

=== ztest138230.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest138230.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest138230.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest138230 ztest138230.c
Checking for strerror... Yes.

=== ztest138230.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest138230.c
Checking for unistd.h... Yes.

=== ztest138230.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest138230.c
Checking for stdarg.h... Yes.

=== ztest138230.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest138230.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest138230.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest138230 ztest138230.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest138230.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest138230.c
Checking for return value of vsnprintf()... Yes.

=== ztest138230.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest138230.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 22:10:40 CET 2025
Checking for gcc...
=== ztest152184.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest152184.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest152184.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest152184.c

Checking for shared library support...
=== ztest152184.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest152184.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest152184.so ztest152184.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest152184.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest152184.c
Checking for size_t... Yes.

=== ztest152184.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152184.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest152184.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest152184 ztest152184.c
Checking for strerror... Yes.

=== ztest152184.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152184.c
Checking for unistd.h... Yes.

=== ztest152184.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152184.c
Checking for stdarg.h... Yes.

=== ztest152184.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152184.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest152184.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest152184 ztest152184.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest152184.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152184.c
Checking for return value of vsnprintf()... Yes.

=== ztest152184.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152184.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 22:11:33 CET 2025
Checking for gcc...
=== ztest152912.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest152912.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest152912.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest152912.c

Checking for shared library support...
=== ztest152912.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest152912.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest152912.so ztest152912.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest152912.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest152912.c
Checking for size_t... Yes.

=== ztest152912.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152912.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest152912.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest152912 ztest152912.c
Checking for strerror... Yes.

=== ztest152912.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152912.c
Checking for unistd.h... Yes.

=== ztest152912.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152912.c
Checking for stdarg.h... Yes.

=== ztest152912.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152912.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest152912.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest152912 ztest152912.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest152912.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152912.c
Checking for return value of vsnprintf()... Yes.

=== ztest152912.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest152912.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 22:12:45 CET 2025
Checking for gcc...
=== ztest153558.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest153558.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest153558.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest153558.c

Checking for shared library support...
=== ztest153558.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest153558.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest153558.so ztest153558.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest153558.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest153558.c
Checking for size_t... Yes.

=== ztest153558.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest153558.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest153558.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest153558 ztest153558.c
Checking for strerror... Yes.

=== ztest153558.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest153558.c
Checking for unistd.h... Yes.

=== ztest153558.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest153558.c
Checking for stdarg.h... Yes.

=== ztest153558.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest153558.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest153558.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest153558 ztest153558.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest153558.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest153558.c
Checking for return value of vsnprintf()... Yes.

=== ztest153558.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest153558.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 22:13:21 CET 2025
Checking for gcc...
=== ztest154250.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest154250.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest154250.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest154250.c

Checking for shared library support...
=== ztest154250.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest154250.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest154250.so ztest154250.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest154250.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest154250.c
Checking for size_t... Yes.

=== ztest154250.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154250.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest154250.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest154250 ztest154250.c
Checking for strerror... Yes.

=== ztest154250.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154250.c
Checking for unistd.h... Yes.

=== ztest154250.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154250.c
Checking for stdarg.h... Yes.

=== ztest154250.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154250.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest154250.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest154250 ztest154250.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest154250.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154250.c
Checking for return value of vsnprintf()... Yes.

=== ztest154250.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154250.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 22:13:39 CET 2025
Checking for gcc...
=== ztest154536.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest154536.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest154536.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest154536.c

Checking for shared library support...
=== ztest154536.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest154536.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest154536.so ztest154536.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest154536.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest154536.c
Checking for size_t... Yes.

=== ztest154536.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154536.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest154536.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest154536 ztest154536.c
Checking for strerror... Yes.

=== ztest154536.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154536.c
Checking for unistd.h... Yes.

=== ztest154536.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154536.c
Checking for stdarg.h... Yes.

=== ztest154536.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154536.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest154536.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest154536 ztest154536.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest154536.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154536.c
Checking for return value of vsnprintf()... Yes.

=== ztest154536.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest154536.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 22:19:31 CET 2025
Checking for gcc...
=== ztest161411.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest161411.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest161411.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest161411.c

Checking for shared library support...
=== ztest161411.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest161411.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest161411.so ztest161411.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest161411.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest161411.c
Checking for size_t... Yes.

=== ztest161411.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest161411.c
--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
sáb feb 22 22:22:41 CET 2025
Checking for gcc...
=== ztest162161.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest162161.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest162161.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest162161.c

Checking for shared library support...
=== ztest162161.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest162161.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest162161.so ztest162161.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest162161.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest162161.c
Checking for size_t... Yes.

=== ztest162161.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest162161.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest162161.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest162161 ztest162161.c
Checking for strerror... Yes.

=== ztest162161.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest162161.c
Checking for unistd.h... Yes.

=== ztest162161.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest162161.c
Checking for stdarg.h... Yes.

=== ztest162161.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest162161.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest162161.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest162161 ztest162161.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest162161.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest162161.c
Checking for return value of vsnprintf()... Yes.

=== ztest162161.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest162161.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
dom feb 23 21:16:58 CET 2025
Checking for gcc...
=== ztest482722.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest482722.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest482722.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest482722.c

Checking for shared library support...
=== ztest482722.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest482722.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest482722.so ztest482722.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest482722.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest482722.c
Checking for size_t... Yes.

=== ztest482722.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest482722.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest482722.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest482722 ztest482722.c
Checking for strerror... Yes.

=== ztest482722.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest482722.c
Checking for unistd.h... Yes.

=== ztest482722.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest482722.c
Checking for stdarg.h... Yes.

=== ztest482722.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest482722.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest482722.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest482722 ztest482722.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest482722.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest482722.c
Checking for return value of vsnprintf()... Yes.

=== ztest482722.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest482722.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/a872016/algoritmia_basica/practica2_872016_873373/libs
dom feb 23 21:18:06 CET 2025
Checking for gcc...
=== ztest483137.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest483137.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest483137.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest483137.c

Checking for shared library support...
=== ztest483137.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest483137.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest483137.so ztest483137.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest483137.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest483137.c
Checking for size_t... Yes.

=== ztest483137.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest483137.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest483137.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest483137 ztest483137.c
Checking for strerror... Yes.

=== ztest483137.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest483137.c
Checking for unistd.h... Yes.

=== ztest483137.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest483137.c
Checking for stdarg.h... Yes.

=== ztest483137.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest483137.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest483137.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest483137 ztest483137.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest483137.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest483137.c
Checking for return value of vsnprintf()... Yes.

=== ztest483137.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest483137.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/a872016/algoritmia_basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/jorge/Escritorio/algoritmia_basica/algoritmia-basica/practica2_872016_873373/libs
dom 23 feb 2025 22:11:00 CET
Checking for gcc...
=== ztest23277.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest23277.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest23277.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest23277.c

Checking for shared library support...
=== ztest23277.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest23277.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest23277.so ztest23277.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest23277.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest23277.c
Checking for size_t... Yes.

=== ztest23277.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23277.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest23277.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23277 ztest23277.c
Checking for strerror... Yes.

=== ztest23277.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23277.c
Checking for unistd.h... Yes.

=== ztest23277.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23277.c
Checking for stdarg.h... Yes.

=== ztest23277.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23277.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest23277.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest23277 ztest23277.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest23277.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23277.c
Checking for return value of vsnprintf()... Yes.

=== ztest23277.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest23277.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/jorge/Escritorio/algoritmia_basica/algoritmia-basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/jorge/Escritorio/algoritmia_basica/algoritmia-basica/practica2_872016_873373/libs
dom 23 feb 2025 22:18:18 CET
Checking for gcc...
=== ztest27837.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest27837.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest27837.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest27837.c

Checking for shared library support...
=== ztest27837.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest27837.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest27837.so ztest27837.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest27837.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest27837.c
Checking for size_t... Yes.

=== ztest27837.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27837.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest27837.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27837 ztest27837.c
Checking for strerror... Yes.

=== ztest27837.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27837.c
Checking for unistd.h... Yes.

=== ztest27837.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27837.c
Checking for stdarg.h... Yes.

=== ztest27837.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27837.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest27837.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest27837 ztest27837.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest27837.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27837.c
Checking for return value of vsnprintf()... Yes.

=== ztest27837.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest27837.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/jorge/Escritorio/algoritmia_basica/algoritmia-basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/jorge/Escritorio/algoritmia_basica/algoritmia-basica/practica2_872016_873373/libs
dom 23 feb 2025 22:22:30 CET
Checking for gcc...
=== ztest30817.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest30817.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest30817.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest30817.c

Checking for shared library support...
=== ztest30817.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest30817.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest30817.so ztest30817.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest30817.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest30817.c
Checking for size_t... Yes.

=== ztest30817.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30817.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest30817.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30817 ztest30817.c
Checking for strerror... Yes.

=== ztest30817.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30817.c
Checking for unistd.h... Yes.

=== ztest30817.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30817.c
Checking for stdarg.h... Yes.

=== ztest30817.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30817.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest30817.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest30817 ztest30817.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest30817.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30817.c
Checking for return value of vsnprintf()... Yes.

=== ztest30817.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest30817.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/jorge/Escritorio/algoritmia_basica/algoritmia-basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/jorge/Escritorio/algoritmia_basica/algoritmia-basica/practica2_872016_873373/libs
dom 23 feb 2025 22:26:46 CET
Checking for gcc...
=== ztest36225.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest36225.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest36225.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest36225.c

Checking for shared library support...
=== ztest36225.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest36225.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest36225.so ztest36225.o
Building shared library libz.so.1.2.13 with gcc.

=== ztest36225.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest36225.c
Checking for size_t... Yes.

=== ztest36225.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest36225.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest36225.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest36225 ztest36225.c
Checking for strerror... Yes.

=== ztest36225.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest36225.c
Checking for unistd.h... Yes.

=== ztest36225.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest36225.c
Checking for stdarg.h... Yes.

=== ztest36225.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest36225.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest36225.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest36225 ztest36225.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest36225.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest36225.c
Checking for return value of vsnprintf()... Yes.

=== ztest36225.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest36225.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.13
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.13
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/jorge/Escritorio/algoritmia_basica/algoritmia-basica/practica2_872016_873373/libs
sharedlibdir = ${libdir}
uname = Linux
--------------------


